@import "../../styles/mixins";

.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}

.readtime {
  display: grid;
  justify-content: flex-end;
  grid-template-rows: auto auto;
  gap: 0.5em;

  @include breakpoint(md) {
    gap: 1em;
    grid-template-columns: auto auto;
    grid-template-rows: auto;
    justify-content: flex-end;
    align-items: center;
  }
}

.meter {
  width: 100px;
  background-color: #88888833;

  [data-darkmode="true"] & {
    background-color: #88888866;
  }

  span {
    background-color: var(--primary);
    display: block;
    height: 4px;
  }
}

.post {
  --content-width: 800px;

  // all headings have the same top spacing
  // we substract 2em because we also set a margin for any collapsing margins of other elements
  // and this value is used only for padding, to accomodate the fixed header
  --heading-spacing: calc(120px - 1em);

  --section-spacing: 40px;

  margin: 0 20px;

  @include breakpoint(md) {
    --heading-spacing: calc(160px - 1em);
    --section-spacing: 80px;

    max-width: var(--content-width);
    margin: 0 auto;
  }

  h2,
  h3,
  h4 {
    margin-top: 1em;
    margin-bottom: 40px;
    padding-top: var(--heading-spacing);
    line-height: 1.4;
  }

  h2 {
    font-size: 44px;

    @include breakpoint(md) {
      font-size: 60px;
    }
  }

  h3 {
    font-size: 30px;

    @include breakpoint(md) {
      font-size: 44px;
    }
  }

  h4 {
    font-size: 22px;

    @include breakpoint(md) {
      font-size: 30px;
    }
  }

  p {
    margin: 1.5em 0;
  }

  blockquote {
    font-style: italic;
    border-left: 8px var(--color) solid;
    margin: var(--section-spacing) 0;
    padding: 0.5em 1em;

    & > p:first-child {
      margin-top: 0;
    }
    & > p:last-child {
      margin-bottom: 0;
    }

    font-size: 24px;

    @include breakpoint(md) {
      font-size: 30px;
    }
  }

  ol,
  ul {
    padding-left: 20px;
    line-height: 1.5;

    @include breakpoint(md) {
      margin-left: 40px;
    }

    li {
      margin: 0.75em 0;
    }
  }

  & > ol > li {
    padding-left: 0.5em;

    &::marker {
      font-weight: bold;
    }

    & ol {
      list-style-type: lower-latin;
      & li {
        padding-left: 0.5em;
      }
    }
  }

  /* Inline code */
  :not(pre) > code {
    font-size: 0.85em;
    padding: 0 0.4em 0.1em 0.4em;
    border-radius: 0.3em;
    white-space: nowrap;

    background-color: #edeff1;

    [data-darkmode="true"] & {
      background-color: #2f2f2e;
    }
  }

  hr {
    margin: calc(2 * var(--section-spacing)) auto;
    display: block;
    border: 0;
    height: 20px;
    width: 10px;
    background-color: #888;
    transform: skewX(-18deg);
    overflow: visible;
    opacity: 0.25;

    &::before,
    &::after {
      display: block;
      content: "";
      height: 20px;
      width: 10px;
      background-color: #888;
      position: absolute;
    }

    &::before {
      transform: translateX(-30px);
    }
    &::after {
      transform: translateX(30px);
    }
  }
}

.subscribe {
  border-top: 1px var(--color) solid;
  margin-top: var(--section-spacing);
  padding-top: var(--section-spacing);

  form {
    width: 50%;
    position: relative;
    margin-top: 1em;
  }
}

.subscribe_input {
  border: 0;
  border-bottom: 1px var(--color) solid;
  font-family: "Roboto Mono", monospace;
  font-style: italic;
  background-color: transparent;
  font-size: 16px;
  padding: 1em 0.5em;
  width: 100%;

  &::placeholder {
    color: #aaa;
  }

  [data-darkmode="true"] &::placeholder {
    color: #555;
  }
}

.subscribe_submit {
  font-size: 16px;
  padding: 1em 0.5em;
  position: absolute;
  bottom: 1px;
  right: 0;
  border: 0;
  background: transparent;
  text-align: left;
  display: flex;
  align-items: center;
  cursor: pointer;
  transition: transform 0.3s;

  span {
    text-indent: -9999em;
    display: block;
  }

  &::before {
    content: "";
    display: block;
    width: 18px;
    height: 1px;
    background-color: var(--color);
    margin-right: -5px;
  }

  &::after {
    content: "";
    display: block;
    width: 4px;
    height: 4px;
    border: 1px var(--color) solid;
    border-left: 0;
    border-bottom: 0;
    transform: rotate(45deg);
  }

  &:hover,
  &:focus {
    transform: translateX(0.5em);
  }
}
